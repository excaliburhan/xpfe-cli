#!/usr/bin/env node

var path = require('path')
var program = require('commander')
var inquirer = require('inquirer')
var download = require('download-git-repo')
var chalk = require('chalk')
var ora = require('ora')
var exists = require('fs').existsSync

// help
function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}

// run process
function run () {
  if (!hasSlash) {
    var officialTemplate = 'xpfe-templates/' + templateName
    downloadTpl(officialTemplate)
  } else {
    downloadTpl(templateName)
  }
}

// download template
function downloadTpl(template) {
  var spinner = ora('downloading template')
  spinner.start()
  download(template, relativePath, function (err) {
    spinner.stop()
    if (err) console.log(chalk.red(err))
    console.log()
    console.log(chalk.cyan('Create project success!'))
    process.exit()
  })
}

program
  .usage('<template-name> [project-name]')
  .on('--help', function () {
    console.log('  Examples:')
    console.log()
    console.log(chalk.gray('    # Create a new project with an template'))
    console.log('    $ xpfe init vue my-project')
    console.log()
    console.log(chalk.gray('    # Create a new project straight from a github repo'))
    console.log('    $ xpfe init username/repo my-project')
    console.log()
  })

help()

// get params
var templateName = program.args[0]
var dirName = program.args[1]
var hasSlash = templateName.indexOf('/') > -1
var isCurrent = !dirName || dirName === '.'
var relativePath = isCurrent ? path.relative('../', process.cwd()) : dirName
var filePath = path.resolve(dirName || '.')

console.log()
process.on('exit', function () {
  console.log()
})

// overwrite
if (exists(filePath)) {
  inquirer.prompt([
    {
      name: 'ok',
      type: 'confirm',
      message: isCurrent
        ? 'Create project in current directory?'
        : 'Target directory exists. Continue?'
    }
  ]).then(function (ans) {
    if (ans.ok) run()
  })
} else {
  run()
}
